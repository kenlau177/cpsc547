(3.8)*(log(670/270))/log(2)
270*exp(2.7*log(2)/3.8)
441.83-390
8.6*100*(44/12)
(8.6*100*(44/12))/7.6
(8.6*100*(44/12))/7.6/2
((152*10^6)^2)/((148*10^6)^2)
library(pwr)
install.packages("pwr")
args(pwr.anova.test)
library(pwr)
args(pwr.anova.test)
n = pwr.anova.test(k=3, f=.4, power=.85)
n
library(ggplot2)
install.packages(""ggplot2"")
install.packages("ggplot2")
args(sample)
args(quantile)
?quantile
ageGroups = quantile(age, probs=c(0,1,.2))
age = sample(18:38, n, replace=T)
n = 38
age = sample(18:38, n, replace=T)
ageGroups = quantile(age, probs=c(0,1,.2))
ageGroups
dat = data.frame(paste0("subject",1:n))
head(dat)
dat = data.frame("subject"=paste0("subject",1:n))
dat
head(dat)
dat = data.frame("subject"=paste0("subject",1:n), age)
dat
?CAT
?cat
?cut
dat = data.frame("subject"=paste0("subject",1:n), age)
dat$ageGroup = cut(dat$age, breaks=quantile(age, probs=seq(0,1,.2))
dat$ageGroup = cut(dat$age, breaks=quantile(age, probs=seq(0,1,.2)))
dat$ageGroup = cut(dat$age, breaks=quantile(age, probs=seq(0,1,.2)))
head(dat)
age
a = dat$ageGroup
head(a)
which(a == "(28.2,32)")
which(a == "(28.2,32]")
head(dat)
dat
dat$ageGroup = cut(dat$age, breaks=quantile(age, probs=seq(0,1,.2)),
include.lowest=T)
dat
args(ddply)
library(plyr)
?ddply
?sample
?ddply
library(knitr)
head(dat)
kable(dat)
a = read.delim("https://github.com/STAT545-UBC/STAT545-UBC.github.io/blob/master/gapminderDataFiveYear.txt")
library(devtools)
?document
.libPaths()
dir(.libPaths())
a = paste0(.libPaths(),"//gameday")
a
document(a)
load_all(a)
setwd(a)
a
list.files()
library(gameday)
?gameday
document()
?gameday
?gameday
library(gameday)
a
load_all()
a
gday
library(devtools)
document()
create(a)
library(gameday)
?gameday
??gameday
getwd(0)
getwd()
setwd("~/")
getwd(a)
install.packages("rebird")
library(rebird)
?rebird
ebirdgeo(species="spinus tristis", lat=42, lng 76)
ebirdgeo(species="spinus tristis", lat=42, lng=76)
?ebirdgeo
ebirdgeo(species="spinus tristis", lat=42, lng=76)
ebirdgeo(species="spinus tristis", lat=42, lng=-76)
vanbirds %>%
head %>%
kable
?ebirdregion
ebirdregion("AI")
ebirdregion("CA-BC")
ebirdregion("US-LA")
library(geonames)
install.packages("geonames")
install.packages("json")
devtools::install_github("ropensci/geoNames")
library(geonames)
options(geonamesUsername="kenlau177")
countryInfo = GNcountryInfo()
countryInfo %>%
head %>%
kable
library(dplyr)
countryInfo %>% head %>% kabel
countryInfo %>% head %>% kable
countryInfo = GNcountryInfo()
countryInfo
countryInfo %>% head %>% kabel
countryInfo %>% head %>% kable
library(knitr)
countryInfo %>% head %>% kable
countryInfo %>%
filter(countryName == "France") %>%
GNcities(north = .$north, east = .$east, south = .$south, west = .$west, maxRows = 500) %>%
ungroup %>%
head %>%
kable
?GNcities
glimpse(countryInfo
)
countryInfo %>%
filter(countryName == "France") %>%
GNcities(north, east, south, west, maxRows = 500) %>%
ungroup %>%
head %>%
kable
names(countryInfo)
head(countryInfo)
countryInfo %>%
filter(countryName == "France") %>%
GNcities(north, east, south, west, maxRows = 500) %>%
ungroup %>%
head %>%
kable
countryInfo %>%
filter(countryName == "France")
countryInfo %>%
filter(countryName == "France") %>%
GNcities(.$north, .$east, .$south, .$west, maxRows = 500) %>%
ungroup %>%
head %>%
kable
?.
countryInfo %>%
filter(countryName == "France") %>%
GNcities(.(north), .(east), .(south), .(west), maxRows = 500) %>%
ungroup %>%
head %>%
kable
options()$geonamesUsername
library(dplyr)
countryInfo %>%
filter(countryName == "France") %>%
GNcities(.(north), .(east), .(south), .(west), maxRows = 500) %>%
ungroup %>%
head %>%
kable
countryInfo %>%
filter(countryName == "France") %>%
GNcities(~north, ~east, ~south, ~west, maxRows = 500) %>%
ungroup %>%
head %>%
kable
.$north
north
with(france, GNcities(north, east, south, west, maxRows = 500) %>%
ungroup %>%
head %>%
kable
)
france = countryInfo %>%
filter(countryName == "France") %>%
france = countryInfo %>%
filter(countryName == "France")
with(france, GNcities(north, east, south, west, maxRows = 500) %>%
ungroup %>%
head %>%
kable
)
GNwikipediaSearch("London") %>%
select(-summary) %>%
head %>%
kable
francebirds <- countryInfo %>%
filter(countryName == "France") %>%
group_by(countryName) %>%
do(allbirds = ebirdregion(.$countryCode))  ## or perhaps fipsCode?
francebirds %>%
summarize(nbirds = nrow(allbirds)) %>%
ungroup %>%
kable
franceBirds
francebirds
nrow(allbirds)
francebirds
francebirds$allbirds
class(francebirds$allbirds)
class(francebirds$allbirds[1])
class(francebirds$allbirds[[1])
class(francebirds$allbirds[[1]])
install.packages("rplos")
library(rplos)
shiny::runApp('C:/Users/Ken/Desktop/School/MSC2_Fall/stat545/shinyApp/gapminderApp')
?reactive
runApp()
getwd()
shiny::runApp('C:/Users/Ken/Desktop/School/MSC2_Fall/stat545/shinyApp/gapminderApp')
shiny::runApp('C:/Users/Ken/Desktop/School/MSC2_Fall/stat545/shinyApp/gapminderApp')
shiny::runApp('C:/Users/Ken/Desktop/School/MSC2_Fall/stat545/shinyApp/gapminderApp')
library(shiny)
shiny::runApp('C:/Users/Ken/Desktop/School/MSC2_Fall/stat545/shinyApp/gapminderApp')
as.Date("2005")
?as.Date
as.year
Date("2005")
?strptime
as.Date("2005", "yyyy")
as.Date("2005", "%y%y%y%y")
as.Date("2005", "%Y%Y%Y%Y")
as.Date("2005", format="%Y%Y%Y%Y")
as.Date("2005", format="%Y")
as.Date("2005")
as.Date("2005", format="%y")
as.Date("2005", format="%Y")
shiny::runApp('C:/Users/Ken/Desktop/School/MSC2_Fall/stat545/shinyApp/gapminderApp')
shiny::runApp('C:/Users/Ken/Desktop/School/MSC2_Fall/stat545/shinyApp/gapminderApp')
as.Date("2005", format="%Y")
as.Date("2005", format="%Y-%m-%d")
format(as.Date("2005", format="%Y-%m-%d"), "%Y")
as.Date("2005", format="%Y-%m-%d")
format(as.Date("2005", format="%Y"), "%Y")
class(format(as.Date("2005", format="%Y"), "%Y"))
as.Date("2005", format="%Y")
class(as.Date("2005", format="%Y"))
a=as.Date("2005", format="%Y")
a
str(a)
names(a)
attributes(a)
shiny::runApp('C:/Users/Ken/Desktop/School/MSC2_Fall/stat545/shinyApp/gapminderApp')
shiny::runApp('C:/Users/Ken/Desktop/School/MSC2_Fall/stat545/shinyApp/gapminderApp')
?dateInput
shiny::runApp('C:/Users/Ken/Desktop/School/MSC2_Fall/stat545/shinyApp/gapminderApp')
shiny::runApp('C:/Users/Ken/Desktop/School/MSC2_Fall/stat545/shinyApp/gapminderApp')
shiny::runApp('C:/Users/Ken/Desktop/School/MSC2_Fall/stat545/shinyApp/gapminderApp')
shiny::runApp('C:/Users/Ken/Desktop/School/MSC2_Fall/stat545/shinyApp/gapminderApp')
shiny::runApp('C:/Users/Ken/Desktop/School/MSC2_Fall/stat545/shinyApp/gapminderApp')
cat(c("19120","123129"))
shiny::runApp('C:/Users/Ken/Desktop/School/MSC2_Fall/stat545/shinyApp/gapminderApp')
gDat
gDat <- read.delim(file = gdURL)
gdURL <- "http://tiny.cc/gapminder"
gDat <- read.delim(file = gdURL)
head(gDat)
cat(head(gDat))
cat(gDat[1,])
cat(c(gDat[1,]))
cat(unlist(gDat[1,]))
cat(names(gDat))
shiny::runApp('C:/Users/Ken/Desktop/School/MSC2_Fall/stat545/shinyApp/gapminderApp')
getwd()
getwd()
setwd("C://Users//Ken//Documents//GitHub//cpsc547")
setwd("C://Users//Ken//Documents//GitHub//cpsc547//Data")
list.files()
a = read.table("datTrn.txt")
a = read.table("datTrn.txt", sep=",")
dim(a)
names(a)
a = read.table("datTrn.txt", sep=",", header=T)
names(a)
b = subset(a, snrdB==0)
dim(b)
b = subset(a, snrdB==c(0,1))
dim(b)
b = subset(a, snrdB%in%c(0,1))
dim(b)
write.table(b, "datTrn_small.txt", sep=",")
a = read.table("datTest.txt", sep=",", header=T)
dim(a)
b = subset(a, snrdB %in% c(0,1))
dim(b)
write.table(b, "datTest_small.txt", sep=",")
